#!/usr/bin/env python3
"""
Wrapper um Prettier/Prettierd:
- Findet Setext-Header (H1: === / H2: ---)
- Wrappt sie in <!-- prettier-ignore-start --> / <!-- prettier-ignore-end -->
- Ruft Prettier auf
- Entfernt die Marker wieder
"""

import sys
import subprocess
import os
import re

START = "<!-- prettier-ignore-start -->"
END = "<!-- prettier-ignore-end -->"

# 1) Eingabe lesen
src = sys.stdin.read()
lines = src.splitlines()

# 2) Setext-Header sch√ºtzen
out_lines = []
i = 0
while i < len(lines):
    cur = lines[i]
    nxt = lines[i + 1] if i + 1 < len(lines) else ""

    if cur.strip() != "" and (re.match(r"^=+\s*$", nxt) or re.match(r"^-+\s*$", nxt)):
        out_lines.append(START)
        out_lines.append(cur)
        out_lines.append(nxt)
        out_lines.append(END)
        i += 2  # skip next
        continue
    else:
        out_lines.append(cur)
        i += 1

protected_src = "\n".join(out_lines)

# 3) Prettier oder Prettierd starten
prettier_bin = os.environ.get("PRETTIER_BIN", "prettier")
res = subprocess.run(
    [prettier_bin, "--parser", "markdown"],
    input=protected_src.encode("utf-8"),
    stdout=subprocess.PIPE,
    stderr=subprocess.PIPE,
)

if res.returncode != 0:
    sys.stderr.write(res.stderr.decode("utf-8"))
    sys.exit(res.returncode)

formatted = res.stdout.decode("utf-8")

# 4) Marker entfernen
cleaned = "\n".join(l for l in formatted.splitlines() if l.strip() not in (START, END))

sys.stdout.write(cleaned)
